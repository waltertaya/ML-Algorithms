# -*- coding: utf-8 -*-
"""pipelines.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14cEwGXh8s34zEIhT3OqUnqiARX-qFX9y
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sn
from sklearn.model_selection import train_test_split
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import OneHotEncoder
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_absolute_error, mean_absolute_percentage_error

from re import X
path = '/content/melb_data.csv'
df = pd.read_csv(path)
X = df.drop('Price', axis=1)
y = df['Price']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=9)

numerical_columns = X_train.select_dtypes(include=['int64', 'float64']).columns
categorical_columns = X_train.select_dtypes(include=['object']).columns
categorical_columns = [cname for cname in categorical_columns if X_train[cname].nunique() < 10 and X_train[cname].dtype == "object"]
numerical_columns = [cname for cname in numerical_columns if X_train[cname].dtype in ['int64', 'float64']]

model = RandomForestRegressor(n_estimators=100, random_state=0)

numerical_transformer = Pipeline(steps=[
    ('imputer', SimpleImputer(strategy='constant')),
])

categorical_transformer = Pipeline(steps=[
    ('imputer', SimpleImputer(strategy='most_frequent')),
    ('onehot', OneHotEncoder(handle_unknown='ignore'))
])

preprocessor = ColumnTransformer(
    transformers=[
        ('num', numerical_transformer, numerical_columns),
        ('cat', categorical_transformer, categorical_columns)
    ])

my_pipeline = Pipeline(steps=[('preprocessor', preprocessor),
                              ('model', model)
                             ])
my_pipeline.fit(X_train, y_train)

y_pred = my_pipeline.predict(X_test)
print(mean_absolute_error(y_test, y_pred))
print(mean_absolute_percentage_error(y_test, y_pred))